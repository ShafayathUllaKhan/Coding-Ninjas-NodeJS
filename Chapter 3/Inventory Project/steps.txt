index.js
controller product js
model product js


ejs npm i ejs --> after installing set the ejs


server.set('viewengine','ejs');
server.set('views',path.join(path.resolve(),'src','views'))


layouts npm i express-ejs-layouts--> after installing set the ejs
import ejsLayouts from 'express-ejs-layouts'
server.use(ejsLayouts)

to get req.body use
server.use(express.urlencoded({extended : true}))

validation 
you can use in controller
you can create middleware
you can install third party validator or package for validation

npm i express-validator

create rules 
const rules = [
        body('name').notEmpty().withMessage('Name is required'),
        body('price').isFloat({gt:0}).withMessage('Price should '),
        body('imageUrl').isURL().withMessage('Invalid url')
    ];

// 2. run those rules.
    await Promise.all(rules.map(rules => rules.run(req)));
    
// 3. check if there are any errors after running the rules.
    var ValidationErors = validationResult(req);

 if(!ValidationErors.isEmpty()){
            return res.render('new-product',{errorMessage : ValidationErors.array()[0].msg});
        }

// updating product

// file upload for image from file manager

1. use third party library multer
2. changes in view
<input type="file" class="form-control" id="imageUrl" name="imageUrl" accept="images/*">

<form action="/" method="post" enctype="multipart/form-data">


3. middleware to handle files
4. Apply that middleware
5. Update controller to update urls of images

 body('imageUrl').custom((value,{req})=>{
            if(!req.file){
                throw new Error("Invalid Image")
            }
            return true;
        })

 const {name,desc,price} = req.body;
        const imageUrl = "images/" + req.file.filename;


// sessions

server --> sessions
client --> cookies

http -> stateless















































































steps for creating or practice project

1. first create a server
2. create folder structure src in src mvc
3. create a model using class with constructor and array
4. create a layout and install ejs and the express ejs layout